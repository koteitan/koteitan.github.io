// ライブラリとテーマの選択肢をシンプルに定義const themes = {    prism: [        "prism-okaidia.css",        "prism-dark.css",        "prism-funky.css",        "prism-twilight.css",        "prism-solarizedlight.css",        "prism-tomorrow.css",        "prism.css",        "prism-coy.css",    ],    highlight: [      "a11y-dark.css",      "agate.css",      "an-old-hope.css",      "androidstudio.css",      "arta.css",      "atom-one-dark-reasonable.css",      "atom-one-dark.css",      "codepen-embed.css",      "dark.css",      "devibeans.css",      "far.css",      "felipec.css",      "github-dark-dimmed.css",      "github-dark.css",      "gml.css",      "gradient-dark.css",      "hybrid.css",      "ir-black.css",      "isbl-editor-dark.css",      "kimbie-dark.css",      "lioshi.css",      "monokai-sublime.css",      "monokai.css",      "night-owl.css",      "nnfx-dark.css",      "nord.css",      "obsidian.css",      "panda-syntax-dark.css",      "paraiso-dark.css",      "pojoaque.css",      "qtcreator-dark.css",      "rainbow.css",      "shades-of-purple.css",      "srcery.css",      "stackoverflow-dark.css",      "sunburst.css",      "tokyo-night-dark.css",      "tomorrow-night-blue.css",      "tomorrow-night-bright.css",      "vs2015.css",      "xt256.css",      "panda-syntax-light.css",      "paraiso-light.css",      "qtcreator-light.css",      "stackoverflow-light.css",      "tokyo-night-light.css",      "arduino-light.css",      "atom-one-light.css",      "brown-paper.css",      "gradient-light.css",      "intellij-light.css",      "isbl-editor-light.css",      "kimbie-light.css",      "lightfair.css",      "nnfx-light.css",      "ascetic.css",      "color-brewer.css",      "default.css",      "docco.css",      "foundation.css",      "github.css",      "googlecode.css",      "grayscale.css",      "idea.css",      "magula.css",      "mono-blue.css",      "purebasic.css",      "routeros.css",      "school-book.css",      "vs.css",      "xcode.css",    ]};// ライブラリ選択時にテーマの選択肢を更新document.getElementById('library-selector').addEventListener('change', function() {    updateThemeOptions(this.value);    updatePreview();});// テーマ選択またはコード入力が変更されたらプレビューを更新document.getElementById('theme-selector').addEventListener('change', updatePreview);document.getElementById('code-input').addEventListener('input', updatePreview);function updateThemeOptions(selectedLibrary) {    const themeSelector = document.getElementById('theme-selector');    themeSelector.innerHTML = ''; // 既存の選択肢をクリア    themes[selectedLibrary].forEach(themeFilename => {        const option = document.createElement('option');        option.value = themeFilename;        // ファイル名から拡張子を除いた部分を表示名として使用        option.textContent = themeFilename.split('.').shift();        themeSelector.appendChild(option);    });}function updatePreview() {    const input = document.getElementById('code-input').value;    const output = document.getElementById('code-output');    const themeFilename = document.getElementById('theme-selector').value;    const library = document.getElementById('library-selector').value;    // 過去のlinkタグをすべて消去    const existingLink = document.getElementById('theme-link');    if (existingLink) {        existingLink.remove();    }    // 新しいテーマのlinkタグを作成    const link = document.createElement('link');    link.id = 'theme-link';    link.rel = 'stylesheet';    link.href = library === 'prism'        ? `https://cdn.jsdelivr.net/npm/prismjs/themes/${themeFilename}`        : `https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/${themeFilename}`;    document.head.appendChild(link);    // コード出力を更新    output.textContent = input;    if (library === 'prism') {        output.className = 'language-javascript';        Prism.highlightAll();    } else {        output.className = 'hljs';        hljs.highlightAll();    }}// 初期化window.onload = function(){  document.getElementById('library-selector').dispatchEvent(new Event('change'));}